status = info
name = PropertiesConfig

property.filename = ./logger/logs/current-operations.log

# Log policy to roll over the log file
appender.rolling.type = RollingFile
appender.rolling.name = FileLogger
appender.rolling.fileName = ${filename}
appender.rolling.filePattern = ./logger/logs/operations-backup-%d{dd-MM-yy}-%i.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %m%n
appender.rolling.policies.type = Policies

# Time-based log policy to roll over the log file at a specified interval
# Rollover is based on the most specific time unit in the date pattern (day for us)
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true

# Size-based log policy to roll over the log file when it exceeds a specified size
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 1MB

# Increment the log file name with integer values or time if the date pattern is present
appender.rolling.strategy.type = DefaultRolloverStrategy

# Maximum of log files to store in the interval (specified above)
# Once this value is reached, older archives files will be deleted on subsequent rollovers
appender.rolling.strategy.max = 3

# Log to rolling file
logger.rolling.name = eu.telecomnancy.receivers.client.logger.LogReceiver
logger.rolling.level = info
logger.rolling.additivity = false
logger.rolling.appenderRef.rolling.ref = FileLogger

rootLogger.level = info
